/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package visual;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import modelos.*;

/**
 *
 * @author karen
 */
public class Visual extends javax.swing.JFrame {
    
    private boolean banderaSeleccionar;
    private boolean banderaMostrarClon;
    private boolean banderaSeleccionarTabla;
    private boolean banderaModificar;
    /**
     * Creates new form NewJFrame
     */
    public Visual() {
        initComponents();
        banderaSeleccionar = false;
        banderaMostrarClon = false;
        banderaSeleccionarTabla = false;
        banderaModificar = false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        comboPersonajes = new javax.swing.JComboBox<>();
        botonSeleccionar = new javax.swing.JButton();
        botonClonar = new javax.swing.JButton();
        imgPersonaje = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblHabilidad = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblEquipo = new javax.swing.JLabel();
        lblExtra = new javax.swing.JLabel();
        lblDescripcionExtra = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        comboPersonajesClonados = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaPersonajes = new javax.swing.JTable();
        imagenPersonajeClon = new javax.swing.JLabel();
        botonMostrar = new javax.swing.JButton();
        botonModificar = new javax.swing.JButton();
        botonEliminar = new javax.swing.JButton();
        botonGuardar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaImagenes = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblExtra1 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtHabilidad = new javax.swing.JTextField();
        txtEquipo = new javax.swing.JTextField();
        txtExtra = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                inizializar(evt);
            }
        });

        comboPersonajes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        botonSeleccionar.setText("Seleccionar");
        botonSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSeleccionarActionPerformed(evt);
            }
        });

        botonClonar.setText("Clonar");
        botonClonar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonClonarActionPerformed(evt);
            }
        });

        imgPersonaje.setText(".");

        jLabel1.setText("Nombre:");

        lblNombre.setText(".");

        jLabel3.setText("Habilidad: ");

        lblHabilidad.setText(".");

        jLabel5.setText("Equipo: ");

        lblEquipo.setText(".");

        lblExtra.setText(".");

        lblDescripcionExtra.setText(".");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(comboPersonajes, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(67, 67, 67))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(imgPersonaje, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(lblExtra)
                    .addComponent(botonSeleccionar))
                .addGap(76, 76, 76)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonClonar)
                    .addComponent(lblNombre)
                    .addComponent(lblHabilidad)
                    .addComponent(lblEquipo)
                    .addComponent(lblDescripcionExtra))
                .addContainerGap(317, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonClonar)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(comboPersonajes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(botonSeleccionar)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lblNombre)
                                .addGap(18, 18, 18)
                                .addComponent(lblHabilidad)
                                .addGap(18, 18, 18)
                                .addComponent(lblEquipo)
                                .addGap(18, 18, 18)
                                .addComponent(lblDescripcionExtra))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(lblExtra)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(imgPersonaje, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(183, 183, 183))))
        );

        jTabbedPane2.addTab("Personaje", jPanel2);

        comboPersonajesClonados.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboPersonajesClonados.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                escogerTipoClon(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        tablaPersonajes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nombre", "Habilidad", "Equipo", "."
            }
        ));
        tablaPersonajes.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_NEXT_COLUMN);
        jScrollPane1.setViewportView(tablaPersonajes);

        imagenPersonajeClon.setText(".");

        botonMostrar.setText("Mostrar");
        botonMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonMostrarActionPerformed(evt);
            }
        });

        botonModificar.setText("Modificar");
        botonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonModificarActionPerformed(evt);
            }
        });

        botonEliminar.setText("Eliminar");
        botonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarActionPerformed(evt);
            }
        });

        botonGuardar.setText("Guardar");
        botonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGuardarActionPerformed(evt);
            }
        });

        listaImagenes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaImagenesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(listaImagenes);

        jLabel2.setText("Nombre:");

        jLabel4.setText("Habilidad: ");

        jLabel6.setText("Equipo: ");

        lblExtra1.setText(".");

        txtNombre.setEditable(false);

        txtHabilidad.setEditable(false);

        txtEquipo.setEditable(false);

        txtExtra.setEditable(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(comboPersonajesClonados, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(217, 217, 217))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addComponent(imagenPersonajeClon, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel6)
                                    .addComponent(lblExtra1))
                                .addGap(27, 27, 27)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNombre)
                                    .addComponent(txtHabilidad)
                                    .addComponent(txtEquipo)
                                    .addComponent(txtExtra, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addComponent(botonGuardar))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(botonMostrar)
                        .addGap(46, 46, 46)
                        .addComponent(botonModificar)
                        .addGap(42, 42, 42)
                        .addComponent(botonEliminar)
                        .addGap(44, 44, 44)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(imagenPersonajeClon, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(comboPersonajesClonados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(txtHabilidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(txtEquipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblExtra1)
                                    .addComponent(txtExtra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28)
                                .addComponent(botonGuardar))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(botonMostrar)
                        .addComponent(botonModificar)
                        .addComponent(botonEliminar))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Clonados", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 402, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inizializar(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_inizializar
        Map<String, Personaje> mapPersonajes = PersonajesCache.retornarMapaPerdonajes();
        ArrayList <String> nombres = new ArrayList();
        for (String key : mapPersonajes.keySet()) {
            Personaje personaje = mapPersonajes.get(key);
            nombres.add(personaje.getNombre());
        }
        comboPersonajes.setModel(new DefaultComboBoxModel<>(nombres.toArray(String[]::new)));
        
        ArrayList<String> tipos = new ArrayList<>();
        tipos.add("Seleccionar");
        tipos.add("Magos");
        tipos.add("Guerreros");
        comboPersonajesClonados.setModel(new DefaultComboBoxModel<>(tipos.toArray(new String[0])));
    }//GEN-LAST:event_inizializar

    private void botonSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSeleccionarActionPerformed
        String nombre = (String) comboPersonajes.getSelectedItem();
        Map<String, Personaje> mapPersonajes = PersonajesCache.retornarMapaPerdonajes();
        for (String key : mapPersonajes.keySet()) {
            Personaje personaje = mapPersonajes.get(key);
            if(nombre.equals(personaje.getNombre())){
                ImageIcon icon = new ImageIcon(personaje.getImagenRepresentativa());
                lblNombre.setText(personaje.getNombre());
                imgPersonaje.setIcon(icon);
                lblHabilidad.setText(personaje.getHabilidades());
                lblEquipo.setText(personaje.getEquipo());
                if (personaje instanceof Mago) {
                    lblExtra.setText("Tipo de Encanto:");
                    lblDescripcionExtra.setText(((Mago) personaje).getTipoEncanto());
                }else if (personaje instanceof Guerrero) {
                    lblExtra.setText("Fuerza:");
                    lblDescripcionExtra.setText(String.valueOf(((Guerrero) personaje).getFuerza()));
                }
                banderaSeleccionar = true;
                break;
            }
        }
    }//GEN-LAST:event_botonSeleccionarActionPerformed

    private void botonClonarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonClonarActionPerformed
        if(banderaSeleccionar == true){
            Personaje personajeClonado = PersonajesCache.clonar((String) comboPersonajes.getSelectedItem());
            JTextField textField = new JTextField(20);


            JPanel panel = new JPanel();
            panel.add(new JLabel("¿Cuál es tu nombre?"));
            panel.add(textField);
            JOptionPane.showConfirmDialog(null, panel, "Entrada", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
            personajeClonado.setNombre(textField.getText());

            RegistroPersonajesClonados.agregar(personajeClonado);
            
            imgPersonaje.setIcon(null);
            lblDescripcionExtra.setText(("."));
            lblEquipo.setText(".");
            lblExtra.setText(".");
            lblHabilidad.setText(".");
            lblNombre.setText(".");
            banderaSeleccionar = false;
        }else{
            JOptionPane.showMessageDialog(this, "Primero seleccione un personaje");
        }
        
    }//GEN-LAST:event_botonClonarActionPerformed

    private void botonMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonMostrarActionPerformed
        if(banderaSeleccionarTabla==true){
            DefaultListModel<String> defaultListModel = new DefaultListModel<>();
            defaultListModel.clear();
            listaImagenes.setModel(defaultListModel);

            int filaSeleccionada = tablaPersonajes.getSelectedRow();
            Object nombre = tablaPersonajes.getValueAt(filaSeleccionada, 0);
            Personaje personaje = RegistroPersonajesClonados.getPersonajeClonado(String.valueOf(nombre));

            imagenPersonajeClon.setIcon(new ImageIcon(personaje.getImagenRepresentativa()));
            banderaMostrarClon = true;
        }else{
            JOptionPane.showMessageDialog(this, "Primero seleccione un personaje");
        }
        
    }//GEN-LAST:event_botonMostrarActionPerformed

    private void escogerTipoClon(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_escogerTipoClon
        Map<String, Personaje> mapPersonajesClonados = RegistroPersonajesClonados.retornarMapaPerosnajesClonados();
        
        DefaultTableModel tabla = (DefaultTableModel) tablaPersonajes.getModel();
        tabla.setRowCount(0);
        tablaPersonajes.setDefaultEditor(Object.class, null);
        for (String key : mapPersonajesClonados.keySet()) {
            Personaje personaje = mapPersonajesClonados.get(key);
            
            if (comboPersonajesClonados.getSelectedItem().equals("Magos") && personaje instanceof Mago) {
                Object[] fila = {personaje.getNombre(), personaje.getEquipo(), personaje.getHabilidades(),((Mago) personaje).getTipoEncanto()};
                tablaPersonajes.getColumnModel().getColumn(3).setHeaderValue("Encanto");
                lblExtra1.setText("Encanto:");
                tabla.addRow(fila);
            } else if (comboPersonajesClonados.getSelectedItem().equals("Guerreros") && personaje instanceof Guerrero) {
                Object[] fila = {personaje.getNombre(), personaje.getEquipo(), personaje.getHabilidades(), ((Guerrero) personaje).getFuerza()};
                tablaPersonajes.getColumnModel().getColumn(3).setHeaderValue("Fuerza");
                lblExtra1.setText("Fuerza:");
                tabla.addRow(fila);
            }
        }
        
        
        
        ListSelectionModel selectionModel = tablaPersonajes.getSelectionModel();
        selectionModel.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    int selectedRow = tablaPersonajes.getSelectedRow();
                    if (selectedRow != -1) { // Si hay una fila seleccionada
                        banderaSeleccionarTabla = true;
                    }else{
                        banderaMostrarClon=false;
                        banderaSeleccionarTabla=false;
                    }
                }
            }
        });
        
    }//GEN-LAST:event_escogerTipoClon

    private void botonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonModificarActionPerformed
        if(banderaMostrarClon==true){
            txtEquipo.setEditable(true);
            txtExtra.setEditable(true);
            txtHabilidad.setEditable(true);
            txtNombre.setEditable(true);

            DefaultListModel<String> defaultListModel = new DefaultListModel<>();

            Object nombre = tablaPersonajes.getValueAt(tablaPersonajes.getSelectedRow(), 0);
            Personaje personaje = RegistroPersonajesClonados.getPersonajeClonado(String.valueOf(nombre));
            txtNombre.setText(personaje.getNombre());
            txtHabilidad.setText(personaje.getHabilidades());
            txtEquipo.setText(personaje.getEquipo());
            if(personaje instanceof Mago){
                txtExtra.setText(((Mago) personaje).getTipoEncanto());
                defaultListModel.addElement("Imagen mago 1");
                defaultListModel.addElement("Imagen mago 2");
                defaultListModel.addElement("Imagen mago 3");
            }else if(personaje instanceof Guerrero){
                txtExtra.setText(String.valueOf(((Guerrero) personaje).getFuerza()));
                defaultListModel.addElement("Imagen guerrero 1");
                defaultListModel.addElement("Imagen guerrero 2");
                defaultListModel.addElement("Imagen guerrero 3");
            }
            listaImagenes.setModel(defaultListModel);
            banderaModificar = true;
        }else{
            JOptionPane.showMessageDialog(this, "Primero muestre un personaje");
        }
        
    }//GEN-LAST:event_botonModificarActionPerformed

    private void listaImagenesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaImagenesMouseClicked
        Object nombre = tablaPersonajes.getValueAt(tablaPersonajes.getSelectedRow(), 0);
        Personaje personaje = RegistroPersonajesClonados.getPersonajeClonado(String.valueOf(nombre));
        int selectedValue = listaImagenes.getSelectedIndex();
        if(personaje instanceof Mago){
            if(selectedValue == 0){
                imagenPersonajeClon.setIcon(new ImageIcon("src\\resources\\imagenes\\Imagen mago 1.jpeg"));
            }else if(selectedValue == 1){
                imagenPersonajeClon.setIcon(new ImageIcon("src\\resources\\imagenes\\Imagen mago 2.jpeg"));
            }else if(selectedValue == 2){
                imagenPersonajeClon.setIcon(new ImageIcon("src\\resources\\imagenes\\Imagen mago 3.jpeg"));
            }
        }else if(personaje instanceof Guerrero){
            if(selectedValue == 0){
                imagenPersonajeClon.setIcon(new ImageIcon("src\\resources\\imagenes\\Imagen guerrero 1.jpeg"));
            }else if(selectedValue == 1){
                imagenPersonajeClon.setIcon(new ImageIcon("src\\resources\\imagenes\\Imagen guerrero 2.jpeg"));
            }else if(selectedValue == 2){
                imagenPersonajeClon.setIcon(new ImageIcon("src\\resources\\imagenes\\Imagen guerrero 3.jpeg"));
            }
        }
    }//GEN-LAST:event_listaImagenesMouseClicked

    private void botonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGuardarActionPerformed
        if(banderaModificar==true){
            Object nombre = tablaPersonajes.getValueAt(tablaPersonajes.getSelectedRow(), 0);
            Personaje personaje = RegistroPersonajesClonados.getPersonajeClonado(String.valueOf(nombre));
            Personaje nuevoPersonaje = null;
            if(personaje instanceof Mago){
                nuevoPersonaje = new Mago(txtExtra.getText(), String.valueOf(imagenPersonajeClon.getIcon()), txtNombre.getText(), txtHabilidad.getText(), txtEquipo.getText());

            }else if(personaje instanceof Guerrero){
                nuevoPersonaje = new Guerrero(Integer.parseInt(txtExtra.getText()), String.valueOf(imagenPersonajeClon.getIcon()), txtNombre.getText(), txtHabilidad.getText(), txtEquipo.getText());
            }

            RegistroPersonajesClonados.modificar(personaje, nuevoPersonaje);
            actualizar();
        }else{
            JOptionPane.showMessageDialog(this, "Primero muestre un personaje");
        }
        
    }//GEN-LAST:event_botonGuardarActionPerformed

    private void botonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarActionPerformed
        if(banderaSeleccionarTabla==true){
            Object nombre = tablaPersonajes.getValueAt(tablaPersonajes.getSelectedRow(), 0);
            Personaje personaje = RegistroPersonajesClonados.getPersonajeClonado(String.valueOf(nombre));
            RegistroPersonajesClonados.eliminar(personaje);
            actualizar();
        }else{
            JOptionPane.showMessageDialog(this, "Primero seleccione un personaje");
        }
        
    }//GEN-LAST:event_botonEliminarActionPerformed
    
    private void actualizar(){
        txtEquipo.setText("");
        txtExtra.setText("");
        txtHabilidad.setText("");
        txtNombre.setText("");
        imagenPersonajeClon.setIcon(null);
        lblExtra1.setText(".");
        escogerTipoClon(null);
        
        DefaultListModel<String> defaultListModel = new DefaultListModel<>();
        
        listaImagenes.setModel(defaultListModel);
        defaultListModel.clear();
    }
    /**
     * @param args the command line arguments
     */

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Visual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Visual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Visual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Visual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PersonajesCache.regristrar();
                
                new Visual().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonClonar;
    private javax.swing.JButton botonEliminar;
    private javax.swing.JButton botonGuardar;
    private javax.swing.JButton botonModificar;
    private javax.swing.JButton botonMostrar;
    private javax.swing.JButton botonSeleccionar;
    private javax.swing.JComboBox<String> comboPersonajes;
    private static javax.swing.JComboBox<String> comboPersonajesClonados;
    private static javax.swing.JLabel imagenPersonajeClon;
    private javax.swing.JLabel imgPersonaje;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JLabel lblDescripcionExtra;
    private javax.swing.JLabel lblEquipo;
    private javax.swing.JLabel lblExtra;
    private javax.swing.JLabel lblExtra1;
    private javax.swing.JLabel lblHabilidad;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JList<String> listaImagenes;
    private static javax.swing.JTable tablaPersonajes;
    private javax.swing.JTextField txtEquipo;
    private javax.swing.JTextField txtExtra;
    private javax.swing.JTextField txtHabilidad;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
